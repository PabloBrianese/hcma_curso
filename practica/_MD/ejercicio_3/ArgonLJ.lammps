#version del script para moleculas con 1 tipo de atomo

units real
boundary	p p p
dimension 3
atom_style atomic



#Las moléculas parametrizadas hasta aqui son
#argon
variable MOLECULA string "argon"

#cota_max_mol_size se usa para poner un separador en los bordes de la caja del sistema para evitar problemas por la 
#cond de cont periodica
variable NumAtomosEnMol equal 1
variable NumTiposAtomos equal 1
variable epsilon_A1vA1 equal 0.2432088
variable sigma_A1vA1 equal 3.432
variable cota_max_mol_size equal ${sigma_A1vA1}
variable MasaA1 equal 39.948
variable ChemSymb string 'Ar' 

###XXX#########################################################################################
#las variables que siguen a continuacion tienen una etiqueta An, donde n corre desde 1 hasta
#NumTiposAtomos 
###############################################################################################
#tipos con que se asocian los atomos 
variable TipoA1 equal 1





variable cutoff_A1vA1 equal 2.5*${sigma_A1vA1}



variable MasaMolecular_umas equal ${NumAtomosEnMol}*${MasaA1}


#Poner la variable "GenerarMovie" en on/off segun se quiera o no generar la movie
variable GenerarMovie string "off"

#Poner en "Si" si la cond inicial se crea con programa externo
variable crear_CI string "No"

#variable auxiliar para definir desde la linea de comandos
variable from_extern equal v_extern


###XXX################################################################################################################
#####################################SECCCION DE PARAMETROS DE CONTROL DE LA SIMULACION###############################
######################################################################################################################
#temp en K
variable Temperatura equal 300.0

#Recordar que para el Fluido de LJ Req~1.122sigma o sigma ~ 0.891 Req

#caja del sistema
variable xlo equal 0.0
variable xhi equal 300.0
variable ylo equal 0.0
variable yhi equal 100.0
variable zlo equal 0.0
variable zhi equal 300.0


variable MoleculasAInsertar equal 10000

variable VolumenCaja equal (${xhi}-${xlo})*(${yhi}-${ylo})*(${zhi}-${zlo})

#Hacemos algunos pasos de integracion para equilibrar el sistema
#durante la equilibracion, la temperatura aumenta linealmente desde
#"TemperaturaIniEquilibracion" hasta el valor final "Temperatura"

variable TemperaturaIniEquilibracion equal 10.0
variable PasosEquilibracion equal 1e4


variable PasosProduccion equal 2e4


variable DTime equal 5.0



#Directorio en el que se van a guardar los archivos de salida
variable DirectorioOut string ./DatosArgonLJ_Temp${Temperatura}_Vol${VolumenCaja}/
#creamos el directorio DirectorioOut
shell 'mkdir --parents' ${DirectorioOut}

variable Prefix string Z

variable NombreDeBase string ${Prefix}${MOLECULA}_NumMol_${MoleculasAInsertar}_Temp${Temperatura}&
PasEqui${PasosEquilibracion}PasProd${PasosProduccion}Dt${DTime}
#variable NombreDeBase string ${Prefix}prueba




variable NumFigurasParaMovie equal 200
variable NumFigurasPNG equal 1
variable NumFigurasXYZ equal 1
variable NumDatos equal 1000
variable NumEstado equal 1



##No modificar esto que sigue
variable NumTotalPasos equal ${PasosProduccion}+${PasosEquilibracion}
variable PasosGuardarFigurasParaMovie equal ${PasosProduccion}/${NumFigurasParaMovie}
variable PasosGuardarFigurasPNG equal ${PasosProduccion}/${NumFigurasPNG}
variable PasosGuardarFigurasXYZ equal ${PasosProduccion}/${NumFigurasXYZ}
variable PasosDatos equal ${PasosProduccion}/${NumDatos}
variable PasosEstado equal ${PasosProduccion}/${NumEstado}
##

#esto lo pongo para poder definir variables que usen info de 
#atomos individuales, como en
#variable MiVariable equal x[34]
atom_modify map array

timestep ${DTime}

region CAJA_SISTEMA block ${xlo} ${xhi} ${ylo} ${yhi} ${zlo} ${zhi}

create_box ${NumTiposAtomos} CAJA_SISTEMA 
###XXX################################################################################################################
#####################################SECCCION DE INSERCION DE ATOMOS EN EL SISTEMA####################################
######################################################################################################################


create_atoms 1 random 10000 1244 NULL
#las variables que siguen a continuacion tienen una etiqueta An, donde n corre desde 1 hasta
#NumTiposAtomos 
group Gr_A1 type ${TipoA1}

mass ${TipoA1} ${MasaA1}







pair_style lj/cut 12.0 
#pair_modify     mix arithmetic
#coeficientes de LJ para la interaccion entre las particulas
#por default lammps usa una regla de mezclado geometrica de Lorentz-Bertelot 
#(llamada geometric en lammps)
pair_coeff ${TipoA1} ${TipoA1} ${epsilon_A1vA1} ${sigma_A1vA1} ${cutoff_A1vA1}

#por si hay átomos demasiado próximos entre sí al comenzar la simulación
#(lo cual la inestabilizaría)
delete_atoms overlap ${sigma_A1vA1} Gr_A1 Gr_A1




#El numero real de particulas podria ser menor que lo definido en MoleculasAInsertar.
#Por eso calculamos cuantas moleculas se insertaron realmente
variable NumTotMoleculas equal $(count(all))/${NumAtomosEnMol}

velocity all create ${TemperaturaIniEquilibracion} 234985122


neighbor	5.0 bin

###XXX###########################################################################################################
###########################################AQUI TERMOSTATOS######################################################
#################################################################################################################

#IMPORTANT NOTE: A Nose-Hoover thermostat will not work well for arbitrary values of Tdamp. 
#If Tdamp is too small,  the temperature can fluctuate wildly; if it is too large, the temperature 
#will take a very long time to equilibrate. A good choice for many models is a Tdamp of around 100 timesteps. 
#Note that this is NOT the same as 100 time units for most units settings.

variable TDamp equal 100.0*${DTime}

fix termostato_eq all nvt temp ${TemperaturaIniEquilibracion} ${Temperatura} ${TDamp} 


#guardamos las posiciones iniciales. Util para poder editar la ci con un visualizador molecular
#dump dump_inicial_posiciones all xyz ${PasosEquilibracion} ${DirectorioOut}${NombreDeBase}_INI.*.xyz 

#dump_modify      dump_inicial_posiciones sort id

# ESCUPE MUCHO CONTENIDO A LA TERMINAL, SOLÍA NO ESTAR COMENTADO
# thermo ${PasosDatos}
# thermo_style custom step temp ke pe etotal press vol density

#Hacemos la equilibracion
run ${PasosEquilibracion}


#undump dump_inicial_posiciones
unfix  termostato_eq

#Reseteamos el termostato ya a la temperatura deseada 

fix termostato all nvt temp ${Temperatura} ${Temperatura} ${TDamp} 


###XXX################################################################################################################
#####################################SECCCION DE GUARDADO DE DATOS E IMAGENES#########################################
######################################################################################################################
reset_timestep 0



#dump		dump_posiciones all xyz ${PasosGuardarFigurasXYZ} ${DirectorioOut}${NombreDeBase}Pos.*.xyz 
#dump_modify dump_posiciones element ${ChemSymb}





if "${GenerarMovie}==on" then &
"dump		dump_movie all movie ${PasosGuardarFigurasParaMovie} ${DirectorioOut}${NombreDeBase}.mpg type type size 1200 1200 &
zoom 2.5 axes no 0 0 box no 0"
		






#Definimos algunas variables utiles para el output de la info termodinamica
variable tiempo equal time
variable TemperaturaMedida equal temp
variable EnergiaTot equal etotal
variable EnergiaCinTot equal ke


compute TemperaturaComp all temp


variable Volumen equal vol
variable DensidadMasica_gr_cc equal density



#Esto pretende calcular la presion de cada lado a partir del computo del
#stress por atomo. Adaptado del help del comando "compute stress/atom" de lammps...

compute              stress_peratom all stress/atom TemperaturaComp
compute              pres all reduce sum c_stress_peratom[1] c_stress_peratom[2] c_stress_peratom[3]
#el factor 101325.0 es para pasar de atmosferas a pascales
#variable     presion equal -101325.0*(c_pres[1]+c_pres[2]+c_pres[3])/(3*v_Volumen)

#presion en atmosferas
variable     presion equal -(c_pres[1]+c_pres[2]+c_pres[3])/(3*v_Volumen)


fix PrintPresion all print ${PasosDatos} "${tiempo} ${presion}" &
  file ${DirectorioOut}${NombreDeBase}__presion &
  title "#Tiempo [fms]     Presion [Atm]" &
  screen no &

#para imprimir una variable que va cambiando durante la simulacion usar "fix print" en vez de "print" solo...
#aunque el manual de lammps nos dice que el comando esta pensado para usarse con equal style variables:
#"...See the variable command for a description of equal style variables which are the most useful ones 
#to use with the fix print command..."

fix printTermodinamica all print ${PasosDatos} &
  "${tiempo} ${TemperaturaMedida} ${EnergiaTot} ${EnergiaCinTot} ${presion} ${Volumen} ${DensidadMasica_gr_cc}" &
  file ${DirectorioOut}${NombreDeBase}__termodinamica &
  title "#tiempo [fms]     Temperatura [K]    EnergiaTotal [Kcal/mol]   EnergiaCineticaTotal [Kcal/mol]   Presion [Atm]   Volumen [ang**3]  Densidad[g cm**-3]" &
  screen no &

fix PrintDensidad all print ${PasosDatos} "${tiempo} ${DensidadMasica_gr_cc}" &
  file ${DirectorioOut}${NombreDeBase}__densidad_gr_cc &
  title "#Tiempo [fms]     Densidad [gr_cc]" &
  screen no &

#definimos variables promediadas para computar el punto en el espacio de fases
variable DensidadMoleculas equal ${NumTotMoleculas}/vol

variable NumAvogadro equal 6.02214e23
#Volumen molar en litros/mol 
variable VolumenMolar equal 1e-27*${NumAvogadro}*vol/${NumTotMoleculas}


fix PrintVolumenMolar all print ${PasosDatos} "${tiempo} ${VolumenMolar}" &
  file ${DirectorioOut}${NombreDeBase}__vol_molar &
  title "#Tiempo [fms]    VolumenMolar [lts/mol]" &
  screen no &

#calculamos el promedio de la presion durante toda la etapa de produccion
fix PresionMedia all ave/time 1 ${PasosEstado} ${PasosEstado} &
  v_VolumenMolar v_DensidadMasica_gr_cc v_presion v_DensidadMoleculas v_TemperaturaMedida &
  file ${DirectorioOut}/${NombreDeBase}__promedios &
  title1 "#[litros/mol] [gr/cc] [atm] [ang**-3] [K]"

run ${PasosProduccion}

