# SISTEMA DE UNIDADES PARA EXPRESAR MAGNITUDES
units real

###################################################################
# TIPOS DE PARTÍCULAS USADAS EN LA SIMULACIÓN
atom_style charge  # con carga
pair_style none  # sin interacciones entre pares
variable electron equal 1  # solo hay un estilo de ellas

###################################################################
# ESTRUCTURAS DE DATOS QUE DEBEN CREAR LOS PROCESADORES
# Evita la construcción y el procesamiento de estructuras de datos innecesarias.
# LAMMPS se prepara, por defecto, para procesar interacciones entre partículas,
# pero estas no son necesarias en un sistema con una única partícula.
neigh_modify once yes
atom_modify	sort 0 0.0
# La distancia a partir de la cual se comunican átomos fantasma entre
# procesadores debe ingresarse manualmente porque no lo hace el estilo de pares
# y no hay información de enlaces
comm_modify cutoff 1.0
# esto lo pongo para poder definir variables que usen info de átomos
# individuales, como en `variable MiVariable equal x[34]`
atom_modify map array

################################################################################
# PARAMETROS DE CONTROL DE LA SIMULACION
variable NumPasosIntegracion equal 1e6
variable DTime equal 0.00001
timestep ${DTime}

################################################################################
# CONDICIONES INICIALES DEL ELECTRÓN
# posición inicial
variable x_ini equal 0.0
variable y_ini equal 0.0
variable z_ini equal 100.0
# velocidad inicial
variable vx_ini equal 10.0
variable vy_ini equal 0.0
variable vz_ini equal 0.0

################################################################################
# CAJA DE SIMULACIÓN
boundary	s s s

variable xlo equal ${x_ini}-15.0
variable xhi equal ${x_ini}+15.0
variable ylo equal ${y_ini}-15.0
variable yhi equal ${y_ini}+15.0
variable zlo equal ${z_ini}-15.0
variable zhi equal ${z_ini}+15.0

region CAJA_SISTEMA block ${xlo} ${xhi} ${ylo} ${yhi} ${zlo} ${zhi}

create_box 1 CAJA_SISTEMA

################################################################################
# INSERCION DE ATOMOS EN EL SISTEMA

# masa del electrón en gramos/mol
# notar que 1 gramos/mol = 1 gr * N_A, donde N_A es la constante de avogadro
variable MasaElectron equal 0.00054854
mass ${electron} ${MasaElectron}

create_atoms ${electron} single ${x_ini} ${y_ini} ${z_ini}

# seteamos la velocidad inicial del electrón
set type ${electron} vx ${vx_ini} vy ${vy_ini} vz ${vz_ini}

# seteamos la carga del electrón, con el sistema de unidades de lammps "real"
variable cargaElectron equal -1
set type ${electron} charge ${cargaElectron}

################################################################################
# SECCIÓN DE CONFIGURACIÓN DE LOS CAMPOS ELÉCTRICO Y MAGNÉTICO

# seteamos el campo eléctrico externo
# IntensityElectr=0 lo usamos para "apagar" el campo electrico 
# medida en unidades de volts/Angstrom
variable IntensityElectr equal 0.1
fix fix_campo_electrico all efield 0.0 ${IntensityElectr} 0.0

# configuración del campo magnetico externo
# IntensityMagn=0 lo usamos para "apagar" el campo magnético
# medida en unidades de (Kcal/mole)*fms/(qp*Angstrom^2)
# recordar que 1 Kcal/mole = ~ 4184 J/N_A, donde N_A es el número de avogadro
variable IntensityMagn equal 0.0
# calculamos las componentes de la fuerza de Lorentz q(v x B), asumimos
# B=(0,1,0)
variable FLx equal -${cargaElectron}*${IntensityMagn}*vz[1]
variable FLy equal 0
variable FLz equal ${cargaElectron}*${IntensityMagn}*vx[1]
fix fix_campo_magnetico all addforce v_FLx v_FLy v_FLz

################################################################################
# SECCIÓN DE DEPÓSITOS
# Directorio en el que se van a guardar los archivos de salida
variable DirectorioOut string ./DatosElectronEnCampoElectromagnetico/
shell 'mkdir --parents' ${DirectorioOut}

variable NombreDeBase string ElectronEnCampo_IntensityMagn${IntensityMagn}IntensityElectr${IntensityElectr}NumPasosIntegracion${NumPasosIntegracion}Dt${DTime}

variable NumFigurasParaMovie equal 200
variable NumDatos equal 1000
variable PasosVideo equal ${NumPasosIntegracion}/${NumFigurasParaMovie}
variable PasosDatos equal ${NumPasosIntegracion}/${NumDatos}


variable t equal time

# traza, tabla
variable x equal x[1]
variable y equal y[1]
variable z equal z[1]
fix printTraza all print ${PasosDatos} "$t $x $y $z" &
  file ${DirectorioOut}${NombreDeBase}__traza &
  screen no &
  title "#tiempo [fms]  X [Ang]  Y [Ang]  Z [Ang]"

# # energía cinética, tabla
# variable EnergiaCinetica equal 0.5*${MasaElectron}*(vx[1]^2+vy[1]^2+vz[1]^2)
# fix printEnergia all print ${PasosDatos} "$t ${EnergiaCinetica}" &
#   file ${DirectorioOut}${NombreDeBase}__energia_cinetica &
#   screen no &
#   title "#tiempo [fms]  EnergiaCineticaTotal [grams.angs^2/(mole.fms^2)]"

# # traza, video
# variable archivoVideo string ${DirectorioOut}${NombreDeBase}.mpg
# variable color string type
# variable diameter string type
# dump dump_movie all movie ${PasosVideo} ${archivoVideo} ${color} ${diameter} &
#   zoom 0.3 &
#   axes yes 100000.0 100.0 &
#   size 1200 1200 &
#   view 80 -30


################################################################################
# INTEGRACIÓN Y ACTUALIZACIÓN DE LAS POSICIONES, VELOCIDADES
# termostato para la integración a energía constante
fix termostato all nve  # actualiza las posiciones y velocidades
run ${NumPasosIntegracion}
